@import 'lib';

.potato-captcha {
    display: none;
}

button, input, select, textarea {
    font: 100% $open-stack;
    margin: 0;
    max-width: 100%;
    vertical-align: middle;
}

button, input {
    line-height: normal;
}

button, input[type=button], input[type=reset], input[type=submit] {
    cursor: pointer;
}

label {
    display: block;
    font-weight: 400;
}

input::-webkit-input-placeholder {
    color: $gray;
}

input::-moz-placeholder {
    text-overflow: ellipsis;  // Firefox 19+
}

input[placeholder] {
    text-overflow: ellipsis;
    // Because bug 673873 is stupidface.
    // Yes, the order matters. Firefox 18 (and below) is clownshoes.
    &:-moz-placeholder:focus {
        color: transparent !important;
    }
    &:focus::-moz-placeholder {
        color: transparent !important;
    }
    &:focus::-webkit-input-placeholder {
        color: transparent !important;
    }
}

form {
    input[type=email], input[type=text], textarea {
        border-radius: 2px;
        border: 1px solid $light-gray;
        padding: 5px;
        &[disabled], &[readonly] {
            background: $seavan-salt-white;
            color: $earl-gray;
            cursor: not-allowed;
        }
    }
    input[type=email], input[type=text], #search-q, textarea {
        &:focus {
            border-color: $sailor-blue;
            box-shadow: 0 0 8px $sailor-blue;
        }
    }
}

textarea {
    display: block;
    overflow: auto;
    vertical-align: top;
}

input:not([type=radio]):not([type=checkbox]),
.pretty-select,
select,
textarea {
    alt-btn-shadow();
    border-radius: 3px;
    border: 1px solid $primer-gray;
    box-shadow: 0 1px 0 #fff, 0 1px 1px $seavan-salt-white inset;
    color: $london-fog-gray;
    font: 400 15px/28px $open-stack;
    text-decoration: none;
    width: 100%;

    &:invalid {
        border-color: $angry-cvan-red;
    }
    &:invalid[value] + .hint {
        /* Highlight the hint if a value is input, but is invalid. */
        color: lighten($angry-cvan-red, 10%);
        font-style: italic;
    }
}
label p[reason] {
    color: $angry-cvan-red;
    display: none;
    font-size: 0.8em;
}
label :required:invalid:not([value]) ~ [reason=required],
label [value]:invalid ~ [reason=invalid] {
    display: block;
}
.required:after {
    color: $angry-cvan-red;
    content: '*';
    left: 3px;
    position: relative;
}
.hint {
    color: $london-fog-gray;
    font-size: 11px;
    margin-top: 2px;
}

.pretty-select,
.pretty-select select {
    cursor: pointer;
}

.pretty-select {
    gradient-two-color(#fff, $seavan-salt-white);
    padding: 0;
    overflow: hidden;
    position: relative;

    &:before {
        dropdown();
        z-index: 2;
    }
    &:after {
        // Hide the native `<select>` arrow so we can overlay our
        // dropdown arrow in `:before`.
        border-left: 1px solid $cement-gray;
        box-shadow: 0 1px 0 #fff, 0 1px 1px $seavan-salt-white inset;
        content: "";
        display: block;
        gradient-two-color(#fff, $seavan-salt-white);
        height: 100%;
        pointer-events: none;
        position: absolute;
        right: 0;
        top: 0;
        width: 45px;
        z-index: 1;
    }
    &:hover:before, &:active:before {
        background-image: url(../img/pretty/dropdown_active.svg);
    }
    select {
        -moz-padding-start: 10px;
        appearance-none();
        background: none;
        border: 0;
        padding: 4px 8px;
    }
}

.form-grid {
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 1px 1px $cement-gray;
    float: left;
    padding: 3px 5px 18px;  // On desktop we want 18px above and below.
    position: relative;
    width: 100%;

    label {
        margin-bottom: 0.5em;
        padding: 1em 1em 0;
    }

    .row > label {
        &:first-child {
            padding-left: 0;
        }
        &:last-child {
            padding-right: 0;
        }
    }

    footer {
        margin-top: 10px;
        position: absolute;
        right: -10px;
        top: -57px;

        // Show only "Save Changes" and "Sign Out" buttons on tablet and larger.
        a:nth-child(2) ~ a {
            display: none;
        }
        p {
            float: left;
            padding: 10px;
        }
        button {
            width: 100%;
        }
    }
}
.form-grid:not(.row) label {
    width: 50%;
}


@keyframes progress-bar-stripes {
    from { background-position: 40px 0; }
    to { background-position: 0 0; }
}

.field,
.field:not(.text):not(.wide) {
    background: #fff;
    border: 1px solid #bbb;
    border-radius: 3px;
    box-shadow: 0 1px 1px #ddd;
    margin-bottom: 5px;
    position: relative;

    > * {
        padding: 6px 12px;
    }

    label {
        background: $salt-flat-white;
        white-space: nowrap;
    }

    p {
        cursor: pointer;
        .chiclet {
            border: 1px solid #000;
            border-radius: 3px;
            box-shadow: inset 0 0 1px 1px #fff;
            display: inline-block;
            height: 1em;
            margin-bottom: -2px;
            vertical-align: baseline;
            width: 1em;
        }
    }
    &:not(.active) form,
    &.active p {
        display: none;
    }
    &.saving {
        background-color: $pineapple-yellow;
        transition: unquote('background-color 0.2s');
        p {
            background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
            background-size: 40px 40px;
            animation: unquote('progress-bar-stripes 2s linear infinite');
        }
    }

    &:after {
        clear: both;
        content: "";
        display: block;
    }
}

.field:not(.text):not(.wide) {

    label {
        border-right: 1px solid #bbb;
        border-radius: 3px 0 0 3px;
        bottom: 0;
        float: left;
        position: absolute;
        top: 0;
        width: 20%;
    }

    form {
        display: none;
        padding: 0 12px;

        > :not(.placeholder),
        > .placeholder > * {
            border: 0;
            padding: 6px 0;
            width: 90%;
        }

        input:not([type=radio]):not([type=checkbox]) {
            border: 0;
            box-shadow: none;
            line-height: 1em;
        }

        select {
            border: 0;
            box-shadow: none;
        }

        button[type=submit] {
            background: $cement-gray;
            border: 1px solid $easy-peasy-gray;
            border-bottom-width: 2px;
            border-radius: 5px;
            font-size: 12px;
            line-height: 1em;
            width: 10%;

            &:hover {
                background: $cloud-gray;
            }
        }
    }

    form, p {
        display: block;
    }
    label + p + form,
    label + p {
        width: 80%;
        margin-left: 20%;
    }
}

.text.field,
.wide.field {
    position: relative;

    label {
        border-bottom: 1px solid #bbb;
        display: block;
    }

    p, textarea {
        border: 0;
        box-shadow: none;
        line-height: 1.2em;
        padding: 6px 12px;
    }
}

.fat.field:not(.text):not(.wide) {
    &.active form {
        line-height: 1em;
        padding-left: 0;
    }
    form > * {
        display: inline-block;
        font-size: 0.8em;
        width: auto;
    }
    form > select.locale {
        width: 20%;

        + input {
            padding: 0 6px;
            width: 70%;

            + button[type=submit] {
                width: 10%;
            }
        }
    }
}

.image-upload {
    input.stealthy[type=file] {
        border: 0;
        box-shadow: none;
        cursor: pointer;
        height: 1em;
        left: 0;
        opacity: 0.01;
        position: absolute;
        right: 0;
        top: 3em;

        + p span {
            color: $sailor-blue;
        }
        &:hover + p span {
            text-decoration: underline;
        }
    }

    p {
        pointer-events: none;
        text-align: center;
    }
    menu {
        font-size: 0.8em;
        padding: 5px 0;
    }

    .drop-target {
        border-radius: 3px;
        overflow: hidden;
        position: relative;

        &:before, &:after {
            bottom: 0;
            left: 0;
            pointer-events: none;
            position: absolute;
            right: 0;
            top: 0;
        }
        &.hover:before {
            background: rgba(0, 0, 0, 0.5);
            border-radius: 3px;
            box-shadow: inset 0 0 40px #000;
            content: "";
            display: block;
        }
        &.hover:after {
            color: #fff;
            content: "â‡§";
            display: block;
            font-size: 80px;
            height: 80px;
            margin: auto;
            text-align: center;
            text-shadow: 0 0.03em #000;
        }
        img, canvas {
            display: block;
            margin: 0 auto;
            max-width: 100%;
        }
    }
}

// Because specificity
.only-logged-in.button,
.logged-in .only-logged-out.button {
    display: none;
}

.only-logged-out.button,
.logged-in .only-logged-in.button {
    display: block;
}

.is-not-curator .field,
.is-not-curator .field:not(.text):not(.wide) {
    border-color: #e7e7e7;
    box-shadow: none;
    pointer-events: none;

    p {
        cursor: none;
    }
    label {
        background: #fff;
    }
}

.is-not-curator .field:not(.text):not(.wide) label {
    border-right: 1px solid #e7e7e7;
}

.is-not-curator .field.text label,
.is-not-curator .field.wide label {
    border-bottom: 1px solid #e7e7e7;
}

.is-not-curator .image-upload {
    input[type=file], p, menu {
        display: none;
    }
}

.is-not-curator .apps .app .delete,
.is-not-curator .apps .app .handle {
    display: none;
}
